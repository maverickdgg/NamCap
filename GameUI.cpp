#include "gameUI.h"
#include "Framework/console.h"

void numbers()
{
	ifstream inData;
	char data;
	inData.open ("map.txt"); // associate & open files
	while (!inData.eof()) 
	{
		inData.get(data);// read from input file
		if(data !=',')
		{		
			cout<<data;
		}
	}
	cout << endl;
	inData.close (); // close files
	/*char map[798]={'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1',
					 '1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1',
					 '1','1','0','0','1','1','1','1','0','0','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','0','0','1','1','1','1','0','0','1','1',
					 '1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1',
					 '1','1','0','0','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','0','0','1','1',
					 '1','1','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','1','1','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','1','1',
					 '1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1',
					 '0','0','0','0','0','0','1','1','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','1','1','0','0','0','0','0','0',
					 '1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','3','3','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1',
					 '2','2','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','2','2',
					 '1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1',
					 '0','0','0','0','0','0','1','1','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','1','1','0','0','0','0','0','0',
					 '1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1',
					 '1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1',
					 '1','1','0','0','1','1','1','1','0','0','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','0','0','1','1','1','1','0','0','1','1',
					 '1','1','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','1','1',
					 '1','1','1','1','0','0','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','0','0','1','1','1','1',
					 '1','1','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','1','1','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','1','1',
					 '1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1',
					 '1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1',
					 '1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'
	};*/

}

void printBlockText(Blocks& txt)
{
    for(unsigned int i=0;i<txt.data.length();++i)
	{
		char coin = 233;
		char portal = 176;

        if(txt.data[i]=='0'){
            cout<<coin;
        }
        if(txt.data[i]=='1'){
            cout<<txt.ch;
        }
		if(txt.data[i]=='2'){
			cout<<portal;
		}
		if(txt.data[i]=='3'){
			cout<<' ';
		}
    cout<<endl;
	}
}

void printscore()
{
	const WORD colors[] =   
	{
		0x1B,0x46                        
	};
	gotoXY(0,2);
	colour(colors[0]);
	cout<<"Player 1";
	gotoXY(0,3);
	colour(colors[0]);
	cout<<"Score: ";
	gotoXY(70, 2);
	colour(colors[1]);
	cout<<"Player 2";
	gotoXY(70, 3);
	colour(colors[1]);
	cout<<"Score: ";
	gotoXY(0,5);
	//Blocks Map;
	//numbers(Map, map , 178);
	numbers();
}